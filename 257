if node == None-> return, if have left or right children, pre + node + “->”; else append pre + node
def gen(ans, node, pre):
    if node == None:
        return
    pre += str(node.val)
    if node.left:
        gen(ans, node.left, pre + "->")
    if node.right:
        gen(ans, node.right, pre + "->")
    if node.left is None and node.right is None:
        ans.append(pre)
class Solution(object):
    def binaryTreePaths(self, root):
        ans = []
        gen(ans, root, "")
        return ans


